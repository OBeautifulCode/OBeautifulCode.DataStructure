<?xml version="1.0" encoding="utf-8"?>
<Project ToolsVersion="15.0" xmlns="http://schemas.microsoft.com/developer/msbuild/2003">
  <Import Project="..\packages\xunit.core.2.4.1\build\xunit.core.props" Condition="Exists('..\packages\xunit.core.2.4.1\build\xunit.core.props')" />
  <Import Project="$(MSBuildExtensionsPath)\$(MSBuildToolsVersion)\Microsoft.Common.props" Condition="Exists('$(MSBuildExtensionsPath)\$(MSBuildToolsVersion)\Microsoft.Common.props')" />
  <PropertyGroup>
    <Configuration Condition=" '$(Configuration)' == '' ">Debug</Configuration>
    <Platform Condition=" '$(Platform)' == '' ">AnyCPU</Platform>
    <ProjectGuid>{6D5DEA9A-3BCC-49BC-9182-FC640018CF42}</ProjectGuid>
    <OutputType>Library</OutputType>
    <AppDesignerFolder>Properties</AppDesignerFolder>
    <RootNamespace>OBeautifulCode.DataStructure.Test</RootNamespace>
    <AssemblyName>OBeautifulCode.DataStructure.Test</AssemblyName>
    <TargetFrameworkVersion>v4.6.2</TargetFrameworkVersion>
    <FileAlignment>512</FileAlignment>
    <Deterministic>true</Deterministic>
    <NuGetPackageImportStamp>
    </NuGetPackageImportStamp>
  </PropertyGroup>
  <PropertyGroup Condition=" '$(Configuration)|$(Platform)' == 'Debug|AnyCPU' ">
    <DebugSymbols>true</DebugSymbols>
    <DebugType>full</DebugType>
    <Optimize>false</Optimize>
    <OutputPath>bin\Debug\</OutputPath>
    <DefineConstants>OBeautifulCodeDataStructureSolution</DefineConstants>
    <ErrorReport>prompt</ErrorReport>
    <WarningLevel>4</WarningLevel>
    <TreatWarningsAsErrors>false</TreatWarningsAsErrors>
    <CodeAnalysisRuleSet />
  </PropertyGroup>
  <PropertyGroup Condition=" '$(Configuration)|$(Platform)' == 'Release|AnyCPU' ">
    <DebugType>pdbonly</DebugType>
    <Optimize>false</Optimize>
    <OutputPath>bin\Release\</OutputPath>
    <DefineConstants>OBeautifulCodeDataStructureSolution</DefineConstants>
    <ErrorReport>prompt</ErrorReport>
    <WarningLevel>4</WarningLevel>
    <TreatWarningsAsErrors>true</TreatWarningsAsErrors>
    <CodeAnalysisRuleSet />
  </PropertyGroup>
  <ItemGroup>
    <Reference Include="AutoFixture, Version=4.11.0.0, Culture=neutral, PublicKeyToken=b24654c590009d4f, processorArchitecture=MSIL">
      <HintPath>..\packages\AutoFixture.4.11.0\lib\net452\AutoFixture.dll</HintPath>
    </Reference>
    <Reference Include="Castle.Core, Version=4.0.0.0, Culture=neutral, PublicKeyToken=407dd0808d44fbdc, processorArchitecture=MSIL">
      <HintPath>..\packages\Castle.Core.4.4.0\lib\net45\Castle.Core.dll</HintPath>
    </Reference>
    <Reference Include="FakeItEasy, Version=6.0.0.0, Culture=neutral, PublicKeyToken=eff28e2146d5fd2c, processorArchitecture=MSIL">
      <HintPath>..\packages\FakeItEasy.6.0.0\lib\net45\FakeItEasy.dll</HintPath>
    </Reference>
    <Reference Include="Fare, Version=2.1.0.0, Culture=neutral, PublicKeyToken=ea68d375bf33a7c8, processorArchitecture=MSIL">
      <HintPath>..\packages\Fare.2.1.2\lib\net35\Fare.dll</HintPath>
    </Reference>
    <Reference Include="MathNet.Numerics, Version=4.15.0.0, Culture=neutral, processorArchitecture=MSIL">
      <HintPath>..\packages\MathNet.Numerics.4.15.0\lib\net461\MathNet.Numerics.dll</HintPath>
    </Reference>
    <Reference Include="MongoDB.Bson, Version=2.4.4.0, Culture=neutral, processorArchitecture=MSIL">
      <HintPath>..\packages\MongoDB.Bson.2.4.4\lib\net45\MongoDB.Bson.dll</HintPath>
    </Reference>
    <Reference Include="OBeautifulCode.AutoFakeItEasy, Version=1.0.138.0, Culture=neutral, processorArchitecture=MSIL">
      <HintPath>..\packages\OBeautifulCode.AutoFakeItEasy.1.0.138\lib\net462\OBeautifulCode.AutoFakeItEasy.dll</HintPath>
    </Reference>
    <Reference Include="OBeautifulCode.Compression, Version=1.0.23.0, Culture=neutral, processorArchitecture=MSIL">
      <HintPath>..\packages\OBeautifulCode.Compression.1.0.23\lib\net462\OBeautifulCode.Compression.dll</HintPath>
    </Reference>
    <Reference Include="OBeautifulCode.Representation.System, Version=1.0.61.0, Culture=neutral, processorArchitecture=MSIL">
      <HintPath>..\packages\OBeautifulCode.Representation.System.1.0.61\lib\net462\OBeautifulCode.Representation.System.dll</HintPath>
    </Reference>
    <Reference Include="OBeautifulCode.Serialization, Version=1.0.115.0, Culture=neutral, processorArchitecture=MSIL">
      <HintPath>..\packages\OBeautifulCode.Serialization.1.0.115\lib\net462\OBeautifulCode.Serialization.dll</HintPath>
    </Reference>
    <Reference Include="OBeautifulCode.Serialization.Bson, Version=1.0.115.0, Culture=neutral, processorArchitecture=MSIL">
      <HintPath>..\packages\OBeautifulCode.Serialization.Bson.1.0.115\lib\net462\OBeautifulCode.Serialization.Bson.dll</HintPath>
    </Reference>
    <Reference Include="OBeautifulCode.Serialization.Json, Version=1.0.115.0, Culture=neutral, processorArchitecture=MSIL">
      <HintPath>..\packages\OBeautifulCode.Serialization.Json.1.0.115\lib\net462\OBeautifulCode.Serialization.Json.dll</HintPath>
    </Reference>
    <Reference Include="OBeautifulCode.Serialization.PropertyBag, Version=1.0.115.0, Culture=neutral, processorArchitecture=MSIL">
      <HintPath>..\packages\OBeautifulCode.Serialization.PropertyBag.1.0.115\lib\net462\OBeautifulCode.Serialization.PropertyBag.dll</HintPath>
    </Reference>
    <Reference Include="OBeautifulCode.Type, Version=1.0.104.0, Culture=neutral, processorArchitecture=MSIL">
      <HintPath>..\packages\OBeautifulCode.Type.1.0.104\lib\net462\OBeautifulCode.Type.dll</HintPath>
    </Reference>
    <Reference Include="System" />
    <Reference Include="Microsoft.CSharp" />
    <Reference Include="System.ComponentModel.DataAnnotations" />
    <Reference Include="System.Configuration" />
    <Reference Include="System.Drawing" />
    <Reference Include="System.Numerics" />
    <Reference Include="System.Runtime.Serialization" />
    <Reference Include="xunit.abstractions, Version=2.0.0.0, Culture=neutral, PublicKeyToken=8d05b1bb7a6fdb6c, processorArchitecture=MSIL">
      <HintPath>..\packages\xunit.abstractions.2.0.3\lib\net35\xunit.abstractions.dll</HintPath>
    </Reference>
    <Reference Include="xunit.assert, Version=2.4.1.0, Culture=neutral, PublicKeyToken=8d05b1bb7a6fdb6c, processorArchitecture=MSIL">
      <HintPath>..\packages\xunit.assert.2.4.1\lib\netstandard1.1\xunit.assert.dll</HintPath>
    </Reference>
    <Reference Include="xunit.core, Version=2.4.1.0, Culture=neutral, PublicKeyToken=8d05b1bb7a6fdb6c, processorArchitecture=MSIL">
      <HintPath>..\packages\xunit.extensibility.core.2.4.1\lib\net452\xunit.core.dll</HintPath>
    </Reference>
    <Reference Include="xunit.execution.desktop, Version=2.4.1.0, Culture=neutral, PublicKeyToken=8d05b1bb7a6fdb6c, processorArchitecture=MSIL">
      <HintPath>..\packages\xunit.extensibility.execution.2.4.1\lib\net452\xunit.execution.desktop.dll</HintPath>
    </Reference>
  </ItemGroup>
  <ItemGroup>
    <Compile Include=".recipes\OBeautifulCode.Assertion\Actions.cs" />
    <Compile Include=".recipes\OBeautifulCode.Assertion\ApplyBecause.cs" />
    <Compile Include=".recipes\OBeautifulCode.Assertion\AssertionKind.cs" />
    <Compile Include=".recipes\OBeautifulCode.Assertion\AssertionTracker.cs" />
    <Compile Include=".recipes\OBeautifulCode.Assertion\AssertionTrackerShould.cs" />
    <Compile Include=".recipes\OBeautifulCode.Assertion\AssertionVerificationFailedException.cs" />
    <Compile Include=".recipes\OBeautifulCode.Assertion\Delegates.cs" />
    <Compile Include=".recipes\OBeautifulCode.Assertion\ImproperUseOfAssertionFrameworkException.cs" />
    <Compile Include=".recipes\OBeautifulCode.Assertion\Range.cs" />
    <Compile Include=".recipes\OBeautifulCode.Assertion\TestAssertionVerificationFailedException.cs" />
    <Compile Include=".recipes\OBeautifulCode.Assertion\TypeValidation.cs" />
    <Compile Include=".recipes\OBeautifulCode.Assertion\ValidatedNotNullAttribute.cs" />
    <Compile Include=".recipes\OBeautifulCode.Assertion\VerifiableItem.cs" />
    <Compile Include=".recipes\OBeautifulCode.Assertion\Verification.cs" />
    <Compile Include=".recipes\OBeautifulCode.Assertion\VerificationParameter.cs" />
    <Compile Include=".recipes\OBeautifulCode.Assertion\Verifications.cs" />
    <Compile Include=".recipes\OBeautifulCode.Assertion\Verifications.Helpers.cs" />
    <Compile Include=".recipes\OBeautifulCode.Assertion\Verifications.Internal.cs" />
    <Compile Include=".recipes\OBeautifulCode.Assertion\Verifications.Strings.cs" />
    <Compile Include=".recipes\OBeautifulCode.Assertion\Verifications.TypeValidation.cs" />
    <Compile Include=".recipes\OBeautifulCode.Assertion\Verifications.Workflow.cs" />
    <Compile Include=".recipes\OBeautifulCode.Assertion\WorkflowExtensions.cs" />
    <Compile Include=".recipes\OBeautifulCode.AutoFakeItEasy\AutoFakeItEasyBootstrapper.cs" />
    <Compile Include=".recipes\OBeautifulCode.Cloning\CloningExtensions.cs" />
    <Compile Include=".recipes\OBeautifulCode.CodeAnalysis\ObcSuppressBecause.cs" />
    <Compile Include=".recipes\OBeautifulCode.CodeGen\Comparable\ComparableTestScenarios{T}.cs" />
    <Compile Include=".recipes\OBeautifulCode.CodeGen\Comparable\ComparableTestScenario{T}.cs" />
    <Compile Include=".recipes\OBeautifulCode.CodeGen\Comparable\ValidatedComparableTestScenario{T}.cs" />
    <Compile Include=".recipes\OBeautifulCode.CodeGen\ConstructorArgumentValidation\ConstructorArgumentValidationTestScenarios{T}.cs" />
    <Compile Include=".recipes\OBeautifulCode.CodeGen\ConstructorArgumentValidation\ConstructorArgumentValidationTestScenario{T}.cs" />
    <Compile Include=".recipes\OBeautifulCode.CodeGen\ConstructorArgumentValidation\ValidatedConstructorArgumentValidationTestScenario{T}.cs" />
    <Compile Include=".recipes\OBeautifulCode.CodeGen\ConstructorPropertyAssignment\CompareActualToExpectedUsing.cs" />
    <Compile Include=".recipes\OBeautifulCode.CodeGen\ConstructorPropertyAssignment\ConstructorPropertyAssignmentTestScenarios{T}.cs" />
    <Compile Include=".recipes\OBeautifulCode.CodeGen\ConstructorPropertyAssignment\ConstructorPropertyAssignmentTestScenario{T}.cs" />
    <Compile Include=".recipes\OBeautifulCode.CodeGen\ConstructorPropertyAssignment\SystemUnderTestExpectedPropertyValue{T}.cs" />
    <Compile Include=".recipes\OBeautifulCode.CodeGen\ConstructorPropertyAssignment\ValidatedConstructorPropertyAssignmentTestScenario{T}.cs" />
    <Compile Include=".recipes\OBeautifulCode.CodeGen\DeepCloneWith\DeepCloneWithTestScenarios{T}.cs" />
    <Compile Include=".recipes\OBeautifulCode.CodeGen\DeepCloneWith\DeepCloneWithTestScenario{T}.cs" />
    <Compile Include=".recipes\OBeautifulCode.CodeGen\DeepCloneWith\SystemUnderTestDeepCloneWithValue{T}.cs" />
    <Compile Include=".recipes\OBeautifulCode.CodeGen\DeepCloneWith\ValidatedDeepCloneWithTestScenario{T}.cs" />
    <Compile Include=".recipes\OBeautifulCode.CodeGen\Equatable\EquatableTestScenarios{T}.cs" />
    <Compile Include=".recipes\OBeautifulCode.CodeGen\Equatable\EquatableTestScenario{T}.cs" />
    <Compile Include=".recipes\OBeautifulCode.CodeGen\Equatable\ValidatedEquatableTestScenario{T}.cs" />
    <Compile Include=".recipes\OBeautifulCode.CodeGen\StringRepresentation\StringRepresentationTestScenarios{T}.cs" />
    <Compile Include=".recipes\OBeautifulCode.CodeGen\StringRepresentation\StringRepresentationTestScenario{T}.cs" />
    <Compile Include=".recipes\OBeautifulCode.CodeGen\StringRepresentation\SystemUnderTestExpectedStringRepresentation{T}.cs" />
    <Compile Include=".recipes\OBeautifulCode.CodeGen\StringRepresentation\ValidatedStringRepresentationTestScenario{T}.cs" />
    <Compile Include=".recipes\OBeautifulCode.Collection\EnumerableExtensions.cs" />
    <Compile Include=".recipes\OBeautifulCode.Compression\CompressorFactory.cs" />
    <Compile Include=".recipes\OBeautifulCode.Compression\DotNetZipCompressor.cs" />
    <Compile Include=".recipes\OBeautifulCode.Compression\NullCompressor.cs" />
    <Compile Include=".recipes\OBeautifulCode.Enum\EnumExtensions.cs" />
    <Compile Include=".recipes\OBeautifulCode.Equality\ByteArrayEqualityComparer.cs" />
    <Compile Include=".recipes\OBeautifulCode.Equality\ColorEqualityComparer.cs" />
    <Compile Include=".recipes\OBeautifulCode.Equality\DateTimeEqualityComparer.cs" />
    <Compile Include=".recipes\OBeautifulCode.Equality\DictionaryEqualityComparer.cs" />
    <Compile Include=".recipes\OBeautifulCode.Equality\EnumerableEqualityComparer.cs" />
    <Compile Include=".recipes\OBeautifulCode.Equality\EnumerableEqualityComparerStrategy.cs" />
    <Compile Include=".recipes\OBeautifulCode.Equality\EqualityComparerHelper.cs" />
    <Compile Include=".recipes\OBeautifulCode.Equality\EqualityExtensions.cs" />
    <Compile Include=".recipes\OBeautifulCode.Equality\HashCodeHelper.cs" />
    <Compile Include=".recipes\OBeautifulCode.Equality\LambdaBackedEqualityComparer.cs" />
    <Compile Include=".recipes\OBeautifulCode.Equality\NativeMethods.cs" />
    <Compile Include=".recipes\OBeautifulCode.Equality\NullableColorEqualityComparer.cs" />
    <Compile Include=".recipes\OBeautifulCode.Equality\NullableDateTimeEqualityComparer.cs" />
    <Compile Include=".recipes\OBeautifulCode.Equality\ObjectEqualityComparer.cs" />
    <Compile Include=".recipes\OBeautifulCode.Equality\ReadOnlyDictionaryEqualityComparer.cs" />
    <Compile Include=".recipes\OBeautifulCode.Equality\ReferenceEqualityComparer{T}.cs" />
    <Compile Include=".recipes\OBeautifulCode.Math\MathHelper.cs" />
    <Compile Include=".recipes\OBeautifulCode.Math\ThreadSafeRandom.cs" />
    <Compile Include=".recipes\OBeautifulCode.Reflection\AccessModifier.cs" />
    <Compile Include=".recipes\OBeautifulCode.Reflection\AppDomainHelper.cs" />
    <Compile Include=".recipes\OBeautifulCode.Reflection\BindingFlagsFor.cs" />
    <Compile Include=".recipes\OBeautifulCode.Reflection\ConstructorsMatchedToPropertiesStrategy.cs" />
    <Compile Include=".recipes\OBeautifulCode.Reflection\DisposableAppDomain.cs" />
    <Compile Include=".recipes\OBeautifulCode.Reflection\MemberAccessModifiers.cs" />
    <Compile Include=".recipes\OBeautifulCode.Reflection\MemberAttributes.cs" />
    <Compile Include=".recipes\OBeautifulCode.Reflection\MemberKinds.cs" />
    <Compile Include=".recipes\OBeautifulCode.Reflection\MemberMutability.cs" />
    <Compile Include=".recipes\OBeautifulCode.Reflection\MemberOwners.cs" />
    <Compile Include=".recipes\OBeautifulCode.Reflection\MemberRelationships.cs" />
    <Compile Include=".recipes\OBeautifulCode.Reflection\OrderMembersBy.cs" />
    <Compile Include=".recipes\OBeautifulCode.Reflection\ReflectionHelper.Attribute.cs" />
    <Compile Include=".recipes\OBeautifulCode.Reflection\ReflectionHelper.Constructor.cs" />
    <Compile Include=".recipes\OBeautifulCode.Reflection\ReflectionHelper.cs" />
    <Compile Include=".recipes\OBeautifulCode.Reflection\ReflectionHelper.Enum.cs" />
    <Compile Include=".recipes\OBeautifulCode.Reflection\ReflectionHelper.Field.cs" />
    <Compile Include=".recipes\OBeautifulCode.Reflection\ReflectionHelper.MemberInfo.cs" />
    <Compile Include=".recipes\OBeautifulCode.Reflection\ReflectionHelper.Method.cs" />
    <Compile Include=".recipes\OBeautifulCode.Reflection\ReflectionHelper.Property.cs" />
    <Compile Include=".recipes\OBeautifulCode.Serialization\AppDomainScenarios.cs" />
    <Compile Include=".recipes\OBeautifulCode.Serialization\FactoryExtensions.cs" />
    <Compile Include=".recipes\OBeautifulCode.Serialization\RoundtripSerializationExtensions.Bson.cs" />
    <Compile Include=".recipes\OBeautifulCode.Serialization\RoundtripSerializationExtensions.cs" />
    <Compile Include=".recipes\OBeautifulCode.Serialization\RoundtripSerializationExtensions.Json.cs" />
    <Compile Include=".recipes\OBeautifulCode.Serialization\RoundtripSerializationExtensions.PropertyBag.cs" />
    <Compile Include=".recipes\OBeautifulCode.Serialization\SerializerFactory.cs" />
    <Compile Include=".recipes\OBeautifulCode.String\StringExtensions.cs" />
    <Compile Include=".recipes\OBeautifulCode.Type\ArrayKind.cs" />
    <Compile Include=".recipes\OBeautifulCode.Type\ToStringReadableOptions.cs" />
    <Compile Include=".recipes\OBeautifulCode.Type\ToStringXmlDocOptions.cs" />
    <Compile Include=".recipes\OBeautifulCode.Type\TypeDummyFactory.cs" />
    <Compile Include=".recipes\OBeautifulCode.Type\TypeDummyFactory.designer.cs" />
    <Compile Include=".recipes\OBeautifulCode.Type\TypeExtensions.cs" />
    <Compile Include="Logic\Extensions\TableRowsExtensionsTest.cs" />
    <Compile Include="Models\Classes\AvailabilityCheck\AvailabilityCheckChainTest.cs" />
    <Compile Include="Models\Classes\AvailabilityCheck\AvailabilityCheckChainTest.designer.cs">
      <DependentUpon>AvailabilityCheckChainTest.cs</DependentUpon>
    </Compile>
    <Compile Include="Models\Classes\AvailabilityCheck\AvailabilityCheckStepTest.cs" />
    <Compile Include="Models\Classes\AvailabilityCheck\AvailabilityCheckStepTest.designer.cs">
      <DependentUpon>AvailabilityCheckStepTest.cs</DependentUpon>
    </Compile>
    <Compile Include="Operations\AvailabilityCheckResult\CheckAvailabilityOpTest.cs" />
    <Compile Include="Operations\AvailabilityCheckResult\CheckAvailabilityOpTest.designer.cs">
      <DependentUpon>CheckAvailabilityOpTest.cs</DependentUpon>
    </Compile>
    <Compile Include="Operations\Decimal\DivideOpTest.cs" />
    <Compile Include="Operations\Decimal\DivideOpTest.designer.cs">
      <DependentUpon>DivideOpTest.cs</DependentUpon>
    </Compile>
    <Compile Include="Exception\CellValueMissingExceptionTest.cs" />
    <Compile Include="Exception\CellNotFoundExceptionTest.cs" />
    <Compile Include="Logic\Builders\ReportCacheTest.cs" />
    <Compile Include="Logic\Builders\OpTest.cs" />
    <Compile Include="Logic\Builders\CellTest.cs" />
    <Compile Include="Logic\Extensions\ReportExtensionsTest.cs" />
    <Compile Include="Logic\Extensions\CellExtensionsTest.cs" />
    <Compile Include="Logic\Protocols\DataStructureConvenienceProtocolsTest.cs" />
    <Compile Include="Logic\Protocols\DataStructureCellProtocolsTest.cs" />
    <Compile Include="Models\Classes\Format\CellValue\Concrete\NullNumberCellFormat{TValue}Test.cs" />
    <Compile Include="Models\Classes\Format\CellValue\Concrete\NullNumberCellFormat{TValue}Test.designer.cs">
      <DependentUpon>NullNumberCellFormat{TValue}Test.cs</DependentUpon>
    </Compile>
    <Compile Include="Operations\Null\NullMultiStatementOp{TStatement,TResult}Test.cs" />
    <Compile Include="Operations\Null\NullMultiStatementOp{TStatement,TResult}Test.designer.cs">
      <DependentUpon>NullMultiStatementOp{TStatement,TResult}Test.cs</DependentUpon>
    </Compile>
    <Compile Include="Operations\Null\NullSingleStatementOp{TStatement,TResult}Test.cs" />
    <Compile Include="Operations\Null\NullSingleStatementOp{TStatement,TResult}Test.designer.cs">
      <DependentUpon>NullSingleStatementOp{TStatement,TResult}Test.cs</DependentUpon>
    </Compile>
    <Compile Include="Operations\Null\NullTwoStatementOp{TStatement,TResult}Test.cs" />
    <Compile Include="Operations\Null\NullTwoStatementOp{TStatement,TResult}Test.designer.cs">
      <DependentUpon>NullTwoStatementOp{TStatement,TResult}Test.cs</DependentUpon>
    </Compile>
    <Compile Include="Operations\Cell\Referenced\CheckAvailabilityOfCellIfNecessaryOpTest.cs" />
    <Compile Include="Operations\Cell\Referenced\CheckAvailabilityOfCellIfNecessaryOpTest.designer.cs">
      <DependentUpon>CheckAvailabilityOfCellIfNecessaryOpTest.cs</DependentUpon>
    </Compile>
    <Compile Include="Operations\Cell\Located\GetAvailabilityOpTest.cs" />
    <Compile Include="Operations\Cell\Located\GetAvailabilityOpTest.designer.cs">
      <DependentUpon>GetAvailabilityOpTest.cs</DependentUpon>
    </Compile>
    <Compile Include="Operations\Cell\Located\GetCellOpExecutionOutcomeOpTest.cs" />
    <Compile Include="Operations\Cell\Located\GetCellOpExecutionOutcomeOpTest.designer.cs">
      <DependentUpon>GetCellOpExecutionOutcomeOpTest.cs</DependentUpon>
    </Compile>
    <Compile Include="Operations\Cell\Located\GetCellValueOp{TResult}Test.cs" />
    <Compile Include="Operations\Cell\Located\GetCellValueOp{TResult}Test.designer.cs">
      <DependentUpon>GetCellValueOp{TResult}Test.cs</DependentUpon>
    </Compile>
    <Compile Include="Operations\Cell\Located\GetValidityOpTest.cs" />
    <Compile Include="Operations\Cell\Located\GetValidityOpTest.designer.cs">
      <DependentUpon>GetValidityOpTest.cs</DependentUpon>
    </Compile>
    <Compile Include="Operations\Bool\IsEqualToOp{TStatement}Test.cs" />
    <Compile Include="Operations\Bool\IsEqualToOp{TStatement}Test.designer.cs">
      <DependentUpon>IsEqualToOp{TStatement}Test.cs</DependentUpon>
    </Compile>
    <Compile Include="Operations\Cell\LocatedCellOpBase{TResult}Test.cs" />
    <Compile Include="Operations\Cell\LocatedCellOpBase{TResult}Test.designer.cs">
      <DependentUpon>LocatedCellOpBase{TResult}Test.cs</DependentUpon>
    </Compile>
    <Compile Include="Models\Classes\CellLocator\CellLocatorBaseTest.cs" />
    <Compile Include="Models\Classes\CellLocator\CellLocatorBaseTest.designer.cs">
      <DependentUpon>CellLocatorBaseTest.cs</DependentUpon>
    </Compile>
    <Compile Include="Events\CellAvailabilityCheck\CellAvailabilityCheckClearedEventTest.cs" />
    <Compile Include="Events\CellAvailabilityCheck\CellAvailabilityCheckClearedEventTest.designer.cs">
      <DependentUpon>CellAvailabilityCheckClearedEventTest.cs</DependentUpon>
    </Compile>
    <Compile Include="Events\CellAvailabilityCheck\CellAvailabilityCheckDeterminedCellDisabledEventTest.cs" />
    <Compile Include="Events\CellAvailabilityCheck\CellAvailabilityCheckDeterminedCellDisabledEventTest.designer.cs">
      <DependentUpon>CellAvailabilityCheckDeterminedCellDisabledEventTest.cs</DependentUpon>
    </Compile>
    <Compile Include="Events\CellAvailabilityCheck\CellAvailabilityCheckDeterminedCellEnabledEventTest.cs" />
    <Compile Include="Events\CellAvailabilityCheck\CellAvailabilityCheckDeterminedCellEnabledEventTest.designer.cs">
      <DependentUpon>CellAvailabilityCheckDeterminedCellEnabledEventTest.cs</DependentUpon>
    </Compile>
    <Compile Include="Events\CellAvailabilityCheck\CellAvailabilityCheckFailedEventTest.cs" />
    <Compile Include="Events\CellAvailabilityCheck\CellAvailabilityCheckFailedEventTest.designer.cs">
      <DependentUpon>CellAvailabilityCheckFailedEventTest.cs</DependentUpon>
    </Compile>
    <Compile Include="Models\Classes\AvailabilityCheck\AvailabilityCheckResultTest.cs" />
    <Compile Include="Models\Classes\AvailabilityCheck\AvailabilityCheckResultTest.designer.cs">
      <DependentUpon>AvailabilityCheckResultTest.cs</DependentUpon>
    </Compile>
    <Compile Include="Models\Classes\AvailabilityCheck\AvailabilityCheckTest.cs" />
    <Compile Include="Models\Classes\AvailabilityCheck\AvailabilityCheckTest.designer.cs">
      <DependentUpon>AvailabilityCheckTest.cs</DependentUpon>
    </Compile>
    <Compile Include="Events\CellAvailabilityCheckEventBaseTest.cs" />
    <Compile Include="Events\CellAvailabilityCheckEventBaseTest.designer.cs">
      <DependentUpon>CellAvailabilityCheckEventBaseTest.cs</DependentUpon>
    </Compile>
    <Compile Include="Events\CellValidation\CellValidationDeterminedCellInvalidEventTest.cs" />
    <Compile Include="Events\CellValidation\CellValidationDeterminedCellInvalidEventTest.designer.cs">
      <DependentUpon>CellValidationDeterminedCellInvalidEventTest.cs</DependentUpon>
    </Compile>
    <Compile Include="Events\CellValidation\CellValidationDeterminedCellValidEventTest.cs" />
    <Compile Include="Events\CellValidation\CellValidationDeterminedCellValidEventTest.designer.cs">
      <DependentUpon>CellValidationDeterminedCellValidEventTest.cs</DependentUpon>
    </Compile>
    <Compile Include="Events\CellValidation\CellValidationClearedEventTest.cs" />
    <Compile Include="Events\CellValidation\CellValidationClearedEventTest.designer.cs">
      <DependentUpon>CellValidationClearedEventTest.cs</DependentUpon>
    </Compile>
    <Compile Include="Events\CellInput\CellInputAppliedEvent{TValue}Test.cs" />
    <Compile Include="Events\CellInput\CellInputAppliedEvent{TValue}Test.designer.cs">
      <DependentUpon>CellInputAppliedEvent{TValue}Test.cs</DependentUpon>
    </Compile>
    <Compile Include="Events\CellInput\CellInputClearedEventTest.cs" />
    <Compile Include="Events\CellInput\CellInputClearedEventTest.designer.cs">
      <DependentUpon>CellInputClearedEventTest.cs</DependentUpon>
    </Compile>
    <Compile Include="Events\CellInputEventBaseTest.cs" />
    <Compile Include="Events\CellInputEventBaseTest.designer.cs">
      <DependentUpon>CellInputEventBaseTest.cs</DependentUpon>
    </Compile>
    <Compile Include="Events\CellOpExecution\CellOpExecutionClearedEventTest.cs" />
    <Compile Include="Events\CellOpExecution\CellOpExecutionClearedEventTest.designer.cs">
      <DependentUpon>CellOpExecutionClearedEventTest.cs</DependentUpon>
    </Compile>
    <Compile Include="Operations\Integer\GetNumberOfSignificantDigitsOpTest.cs" />
    <Compile Include="Operations\Integer\GetNumberOfSignificantDigitsOpTest.designer.cs">
      <DependentUpon>GetNumberOfSignificantDigitsOpTest.cs</DependentUpon>
    </Compile>
    <Compile Include="Models\Classes\Format\Region\Regions\FooterRowsFormatTest.cs" />
    <Compile Include="Models\Classes\Format\Region\Regions\FooterRowsFormatTest.designer.cs">
      <DependentUpon>FooterRowsFormatTest.cs</DependentUpon>
    </Compile>
    <Compile Include="Models\Classes\Row\FooterRowsTest.cs" />
    <Compile Include="Models\Classes\Row\FooterRowsTest.designer.cs">
      <DependentUpon>FooterRowsTest.cs</DependentUpon>
    </Compile>
    <Compile Include="Models\Classes\Format\CellValue\Concrete\BooleanCellValueFormatTest.cs" />
    <Compile Include="Models\Classes\Format\CellValue\Concrete\BooleanCellValueFormatTest.designer.cs">
      <DependentUpon>BooleanCellValueFormatTest.cs</DependentUpon>
    </Compile>
    <Compile Include="Models\Classes\Format\CellValue\Concrete\CategoricalCellValueFormat{TValue}Test.cs" />
    <Compile Include="Models\Classes\Format\CellValue\Concrete\CategoricalCellValueFormat{TValue}Test.designer.cs">
      <DependentUpon>CategoricalCellValueFormat{TValue}Test.cs</DependentUpon>
    </Compile>
    <Compile Include="Models\Classes\Format\CellValue\Concrete\DecimalCellValueFormatTest.cs" />
    <Compile Include="Models\Classes\Format\CellValue\Concrete\DecimalCellValueFormatTest.designer.cs">
      <DependentUpon>DecimalCellValueFormatTest.cs</DependentUpon>
    </Compile>
    <Compile Include="Models\Classes\Format\CellValue\Concrete\HtmlCellValueFormatTest.cs" />
    <Compile Include="Models\Classes\Format\CellValue\Concrete\HtmlCellValueFormatTest.designer.cs">
      <DependentUpon>HtmlCellValueFormatTest.cs</DependentUpon>
    </Compile>
    <Compile Include="Models\Classes\Format\CellValue\CellValueFormatBase{TValue}Test.cs" />
    <Compile Include="Models\Classes\Format\CellValue\CellValueFormatBase{TValue}Test.designer.cs">
      <DependentUpon>CellValueFormatBase{TValue}Test.cs</DependentUpon>
    </Compile>
    <Compile Include="DataStructureDummyFactory.designer.cs">
      <DependentUpon>DataStructureDummyFactory.cs</DependentUpon>
    </Compile>
    <Compile Include="DataStructureDummyFactoryTest.designer.cs">
      <DependentUpon>DataStructureDummyFactoryTest.cs</DependentUpon>
    </Compile>
    <Compile Include="Events\CellOpExecutionEventBaseTest.designer.cs">
      <DependentUpon>CellOpExecutionEventBaseTest.cs</DependentUpon>
    </Compile>
    <Compile Include="Events\CellOpExecution\CellOpExecutionAbortedEventTest.designer.cs">
      <DependentUpon>CellOpExecutionAbortedEventTest.cs</DependentUpon>
    </Compile>
    <Compile Include="Events\CellOpExecution\CellOpExecutionCompletedEvent{TResult}Test.designer.cs">
      <DependentUpon>CellOpExecutionCompletedEvent{TResult}Test.cs</DependentUpon>
    </Compile>
    <Compile Include="Events\CellOpExecution\CellOpExecutionDeemedNotApplicableEventTest.cs" />
    <Compile Include="Events\CellOpExecution\CellOpExecutionDeemedNotApplicableEventTest.designer.cs">
      <DependentUpon>CellOpExecutionDeemedNotApplicableEventTest.cs</DependentUpon>
    </Compile>
    <Compile Include="Events\CellOpExecution\CellOpExecutionFailedEventTest.designer.cs">
      <DependentUpon>CellOpExecutionFailedEventTest.cs</DependentUpon>
    </Compile>
    <Compile Include="Events\CellValidationEventBaseTest.designer.cs">
      <DependentUpon>CellValidationEventBaseTest.cs</DependentUpon>
    </Compile>
    <Compile Include="Events\CellValidation\CellValidationAbortedEventTest.cs" />
    <Compile Include="Events\CellValidation\CellValidationAbortedEventTest.designer.cs">
      <DependentUpon>CellValidationAbortedEventTest.cs</DependentUpon>
    </Compile>
    <Compile Include="Events\CellValidation\CellValidationDeemedNotApplicableEventTest.cs" />
    <Compile Include="Events\CellValidation\CellValidationDeemedNotApplicableEventTest.designer.cs">
      <DependentUpon>CellValidationDeemedNotApplicableEventTest.cs</DependentUpon>
    </Compile>
    <Compile Include="Events\CellValidation\CellValidationFailedEventTest.cs" />
    <Compile Include="Events\CellValidation\CellValidationFailedEventTest.designer.cs">
      <DependentUpon>CellValidationFailedEventTest.cs</DependentUpon>
    </Compile>
    <Compile Include="Models\Classes\CellValue\MediaReferenceTest.designer.cs">
      <DependentUpon>MediaReferenceTest.cs</DependentUpon>
    </Compile>
    <Compile Include="Models\Classes\Cell\CellBaseTest.designer.cs">
      <DependentUpon>CellBaseTest.cs</DependentUpon>
    </Compile>
    <Compile Include="Models\Classes\Cell\Input\InputCellBase{TValue}Test.designer.cs">
      <DependentUpon>InputCellBase{TValue}Test.cs</DependentUpon>
    </Compile>
    <Compile Include="Models\Classes\Cell\Input\InputCell{TValue}Test.designer.cs">
      <DependentUpon>InputCell{TValue}Test.cs</DependentUpon>
    </Compile>
    <Compile Include="Models\Classes\Cell\Null\NullCellBaseTest.designer.cs">
      <DependentUpon>NullCellBaseTest.cs</DependentUpon>
    </Compile>
    <Compile Include="Models\Classes\Cell\Null\NullCellTest.designer.cs">
      <DependentUpon>NullCellTest.cs</DependentUpon>
    </Compile>
    <Compile Include="Models\Classes\Cell\Output\Const\ConstCell{TValue}Test.designer.cs">
      <DependentUpon>ConstCell{TValue}Test.cs</DependentUpon>
    </Compile>
    <Compile Include="Models\Classes\Cell\Output\Const\ConstOutputCellBase{TValue}Test.designer.cs">
      <DependentUpon>ConstOutputCellBase{TValue}Test.cs</DependentUpon>
    </Compile>
    <Compile Include="Models\Classes\Cell\Output\Operation\OperationCell{TValue}Test.designer.cs">
      <DependentUpon>OperationCell{TValue}Test.cs</DependentUpon>
    </Compile>
    <Compile Include="Models\Classes\Cell\Output\Operation\OperationOutputCellBase{TValue}Test.designer.cs">
      <DependentUpon>OperationOutputCellBase{TValue}Test.cs</DependentUpon>
    </Compile>
    <Compile Include="Models\Classes\Cell\Output\OutputCellBase{TValue}Test.designer.cs">
      <DependentUpon>OutputCellBase{TValue}Test.cs</DependentUpon>
    </Compile>
    <Compile Include="Models\Classes\Cell\Slotted\SlottedCellTest.designer.cs">
      <DependentUpon>SlottedCellTest.cs</DependentUpon>
    </Compile>
    <Compile Include="Models\Classes\Column\ColumnTest.designer.cs">
      <DependentUpon>ColumnTest.cs</DependentUpon>
    </Compile>
    <Compile Include="Models\Classes\Column\TableColumnsTest.designer.cs">
      <DependentUpon>TableColumnsTest.cs</DependentUpon>
    </Compile>
    <Compile Include="Models\Classes\Format\Border\BorderBaseTest.designer.cs">
      <DependentUpon>BorderBaseTest.cs</DependentUpon>
    </Compile>
    <Compile Include="Models\Classes\Format\Border\InnerBorderTest.designer.cs">
      <DependentUpon>InnerBorderTest.cs</DependentUpon>
    </Compile>
    <Compile Include="Models\Classes\Format\Border\OuterBorderTest.designer.cs">
      <DependentUpon>OuterBorderTest.cs</DependentUpon>
    </Compile>
    <Compile Include="Models\Classes\Format\Fill\FillPatternTest.designer.cs">
      <DependentUpon>FillPatternTest.cs</DependentUpon>
    </Compile>
    <Compile Include="Models\Classes\Format\FontFormatTest.designer.cs">
      <DependentUpon>FontFormatTest.cs</DependentUpon>
    </Compile>
    <Compile Include="Models\Classes\Format\Region\MultiCellRegionFormatBaseTest.designer.cs">
      <DependentUpon>MultiCellRegionFormatBaseTest.cs</DependentUpon>
    </Compile>
    <Compile Include="Models\Classes\Format\Region\RegionFormatBaseTest.designer.cs">
      <DependentUpon>RegionFormatBaseTest.cs</DependentUpon>
    </Compile>
    <Compile Include="Models\Classes\Format\Region\Regions\CellFormatTest.designer.cs">
      <DependentUpon>CellFormatTest.cs</DependentUpon>
    </Compile>
    <Compile Include="Models\Classes\Format\Region\Regions\ColumnFormatTest.designer.cs">
      <DependentUpon>ColumnFormatTest.cs</DependentUpon>
    </Compile>
    <Compile Include="Models\Classes\Format\Region\Regions\DataRowsFormatTest.designer.cs">
      <DependentUpon>DataRowsFormatTest.cs</DependentUpon>
    </Compile>
    <Compile Include="Models\Classes\Format\Region\Regions\HeaderRowsFormatTest.designer.cs">
      <DependentUpon>HeaderRowsFormatTest.cs</DependentUpon>
    </Compile>
    <Compile Include="Models\Classes\Format\Region\Regions\RowFormatTest.designer.cs">
      <DependentUpon>RowFormatTest.cs</DependentUpon>
    </Compile>
    <Compile Include="Models\Classes\Format\Region\Regions\TableFormatTest.designer.cs">
      <DependentUpon>TableFormatTest.cs</DependentUpon>
    </Compile>
    <Compile Include="Models\Classes\Format\Report\ReportFormatTest.designer.cs">
      <DependentUpon>ReportFormatTest.cs</DependentUpon>
    </Compile>
    <Compile Include="Models\Classes\Format\Report\SectionFormatTest.designer.cs">
      <DependentUpon>SectionFormatTest.cs</DependentUpon>
    </Compile>
    <Compile Include="Models\Classes\HoverOver\HoverOverBaseTest.designer.cs">
      <DependentUpon>HoverOverBaseTest.cs</DependentUpon>
    </Compile>
    <Compile Include="Models\Classes\HoverOver\HtmlHoverOverTest.designer.cs">
      <DependentUpon>HtmlHoverOverTest.cs</DependentUpon>
    </Compile>
    <Compile Include="Models\Classes\HoverOver\StringHoverOverTest.designer.cs">
      <DependentUpon>StringHoverOverTest.cs</DependentUpon>
    </Compile>
    <Compile Include="Models\Classes\Link\LinkBaseTest.designer.cs">
      <DependentUpon>LinkBaseTest.cs</DependentUpon>
    </Compile>
    <Compile Include="Models\Classes\Link\LinkedResourceBaseTest.designer.cs">
      <DependentUpon>LinkedResourceBaseTest.cs</DependentUpon>
    </Compile>
    <Compile Include="Models\Classes\Link\Resource\BytesPayloadLinkedResourceTest.designer.cs">
      <DependentUpon>BytesPayloadLinkedResourceTest.cs</DependentUpon>
    </Compile>
    <Compile Include="Models\Classes\Link\Resource\StringPayloadLinkedResourceTest.designer.cs">
      <DependentUpon>StringPayloadLinkedResourceTest.cs</DependentUpon>
    </Compile>
    <Compile Include="Models\Classes\Link\Resource\UrlLinkedResourceTest.designer.cs">
      <DependentUpon>UrlLinkedResourceTest.cs</DependentUpon>
    </Compile>
    <Compile Include="Models\Classes\Link\SimpleLinkTest.designer.cs">
      <DependentUpon>SimpleLinkTest.cs</DependentUpon>
    </Compile>
    <Compile Include="Models\Classes\Report\ReportTest.designer.cs">
      <DependentUpon>ReportTest.cs</DependentUpon>
    </Compile>
    <Compile Include="Models\Classes\Report\SectionTest.designer.cs">
      <DependentUpon>SectionTest.cs</DependentUpon>
    </Compile>
    <Compile Include="Models\Classes\Row\DataRowsTest.designer.cs">
      <DependentUpon>DataRowsTest.cs</DependentUpon>
    </Compile>
    <Compile Include="Models\Classes\Row\FlatRowTest.designer.cs">
      <DependentUpon>FlatRowTest.cs</DependentUpon>
    </Compile>
    <Compile Include="Models\Classes\Row\HeaderRowsTest.designer.cs">
      <DependentUpon>HeaderRowsTest.cs</DependentUpon>
    </Compile>
    <Compile Include="Models\Classes\Row\RowBaseTest.designer.cs">
      <DependentUpon>RowBaseTest.cs</DependentUpon>
    </Compile>
    <Compile Include="Models\Classes\Row\RowTest.designer.cs">
      <DependentUpon>RowTest.cs</DependentUpon>
    </Compile>
    <Compile Include="Models\Classes\Row\TableRowsTest.designer.cs">
      <DependentUpon>TableRowsTest.cs</DependentUpon>
    </Compile>
    <Compile Include="Models\Classes\Report\TreeTableTest.designer.cs">
      <DependentUpon>TreeTableTest.cs</DependentUpon>
    </Compile>
    <Compile Include="Models\Classes\Format\CellValue\NumberCellFormatBase{TValue}Test.cs" />
    <Compile Include="Models\Classes\Format\CellValue\NumberCellFormatBase{TValue}Test.designer.cs">
      <DependentUpon>NumberCellFormatBase{TValue}Test.cs</DependentUpon>
    </Compile>
    <Compile Include="Models\Classes\Cell\NotSlottedCellBaseTest.cs" />
    <Compile Include="Models\Classes\Cell\NotSlottedCellBaseTest.designer.cs">
      <DependentUpon>NotSlottedCellBaseTest.cs</DependentUpon>
    </Compile>
    <Compile Include="Operations\Bool\AndAlsoOpTest.designer.cs">
      <DependentUpon>AndAlsoOpTest.cs</DependentUpon>
    </Compile>
    <Compile Include="Operations\Bool\CompareOpTest.cs" />
    <Compile Include="Events\CellValidationEventBaseTest.cs" />
    <Compile Include="Operations\Bool\AndAlsoOpTest.cs" />
    <Compile Include="Events\CellOpExecution\CellOpExecutionAbortedEventTest.cs" />
    <Compile Include="Events\CellOpExecution\CellOpExecutionCompletedEvent{TResult}Test.cs" />
    <Compile Include="Events\CellOpExecutionEventBaseTest.cs" />
    <Compile Include="Events\CellOpExecution\CellOpExecutionFailedEventTest.cs" />
    <Compile Include="Models\Classes\Cell\Output\Const\ConstCell{TValue}Test.cs" />
    <Compile Include="Models\Classes\Cell\Output\Const\ConstOutputCellBase{TValue}Test.cs" />
    <Compile Include="Operations\Bool\CompareOpTest.designer.cs">
      <DependentUpon>CompareOpTest.cs</DependentUpon>
    </Compile>
    <Compile Include="Operations\Bool\NotOpTest.designer.cs">
      <DependentUpon>NotOpTest.cs</DependentUpon>
    </Compile>
    <Compile Include="Operations\Bool\OrElseOpTest.designer.cs">
      <DependentUpon>OrElseOpTest.cs</DependentUpon>
    </Compile>
    <Compile Include="Operations\Branch\IfThenElseOp{TResult}Test.designer.cs">
      <DependentUpon>IfThenElseOp{TResult}Test.cs</DependentUpon>
    </Compile>
    <Compile Include="Operations\Cell\Referenced\ExecuteOperationCellIfNecessaryOp{TValue}Test.cs" />
    <Compile Include="Operations\Cell\Referenced\ExecuteOperationCellIfNecessaryOp{TValue}Test.designer.cs">
      <DependentUpon>ExecuteOperationCellIfNecessaryOp{TValue}Test.cs</DependentUpon>
    </Compile>
    <Compile Include="Operations\Cell\Located\HasCellValueOpTest.designer.cs">
      <DependentUpon>HasCellValueOpTest.cs</DependentUpon>
    </Compile>
    <Compile Include="Operations\Decimal\SumOpTest.designer.cs">
      <DependentUpon>SumOpTest.cs</DependentUpon>
    </Compile>
    <Compile Include="Operations\GetConstOp{TValue}Test.cs" />
    <Compile Include="Operations\Cell\Located\HasCellValueOpTest.cs" />
    <Compile Include="Operations\Branch\IfThenElseOp{TResult}Test.cs" />
    <Compile Include="Models\Classes\Cell\Input\InputCellBase{TValue}Test.cs" />
    <Compile Include="Models\Classes\Cell\Input\InputCell{TValue}Test.cs" />
    <Compile Include="Models\Classes\Format\CellValue\StandardCellValueFormatBase{TValue}Test.cs" />
    <Compile Include="Models\Classes\Format\CellValue\StandardCellValueFormatBase{TValue}Test.designer.cs">
      <DependentUpon>StandardCellValueFormatBase{TValue}Test.cs</DependentUpon>
    </Compile>
    <Compile Include="Models\Classes\Validation\ValidationTest.cs" />
    <Compile Include="Models\Classes\Validation\ValidationTest.designer.cs">
      <DependentUpon>ValidationTest.cs</DependentUpon>
    </Compile>
    <Compile Include="Models\Classes\Validation\ValidationResultTest.cs" />
    <Compile Include="Models\Classes\Validation\ValidationResultTest.designer.cs">
      <DependentUpon>ValidationResultTest.cs</DependentUpon>
    </Compile>
    <Compile Include="Models\Classes\CellLocator\ThisCellLocatorTest.cs" />
    <Compile Include="Models\Classes\CellLocator\ThisCellLocatorTest.designer.cs">
      <DependentUpon>ThisCellLocatorTest.cs</DependentUpon>
    </Compile>
    <Compile Include="Operations\TwoStatementOpBase{TStatement,TResult}Test.cs" />
    <Compile Include="Operations\TwoStatementOpBase{TStatement,TResult}Test.designer.cs">
      <DependentUpon>TwoStatementOpBase{TStatement,TResult}Test.cs</DependentUpon>
    </Compile>
    <Compile Include="Operations\Cell\Referenced\ValidateCellIfNecessaryOpTest.cs" />
    <Compile Include="Operations\Cell\Referenced\ValidateCellIfNecessaryOpTest.designer.cs">
      <DependentUpon>ValidateCellIfNecessaryOpTest.cs</DependentUpon>
    </Compile>
    <Compile Include="Operations\ValidationResult\ValidateOpTest.cs" />
    <Compile Include="Operations\ValidationResult\ValidateOpTest.designer.cs">
      <DependentUpon>ValidateOpTest.cs</DependentUpon>
    </Compile>
    <Compile Include="Models\Classes\Validation\ValidationChainTest.cs" />
    <Compile Include="Models\Classes\Validation\ValidationChainTest.designer.cs">
      <DependentUpon>ValidationChainTest.cs</DependentUpon>
    </Compile>
    <Compile Include="Models\Classes\Validation\ValidationStepTest.cs" />
    <Compile Include="Models\Classes\Validation\ValidationStepTest.designer.cs">
      <DependentUpon>ValidationStepTest.cs</DependentUpon>
    </Compile>
    <Compile Include="Logic\Extensions\RowBaseExtensionsTest.cs" />
    <Compile Include="Logic\Extensions\TreeTableExtensionsTest.cs" />
    <Compile Include="Models\Classes\CellValue\MediaReferenceTest.cs" />
    <Compile Include="Models\Classes\Cell\CellBaseTest.cs" />
    <Compile Include="Models\Classes\Column\ColumnTest.cs" />
    <Compile Include="Models\Classes\Column\TableColumnsTest.cs" />
    <Compile Include="Models\Classes\Format\Border\BorderBaseTest.cs" />
    <Compile Include="Models\Classes\Format\Border\InnerBorderTest.cs" />
    <Compile Include="Models\Classes\Format\Border\OuterBorderTest.cs" />
    <Compile Include="Models\Classes\Format\Fill\FillPatternTest.cs" />
    <Compile Include="Models\Classes\Format\FontFormatTest.cs" />
    <Compile Include="Models\Classes\Format\Region\MultiCellRegionFormatBaseTest.cs" />
    <Compile Include="Models\Classes\Format\Region\RegionFormatBaseTest.cs" />
    <Compile Include="Models\Classes\Format\Region\Regions\CellFormatTest.cs" />
    <Compile Include="Models\Classes\Format\Region\Regions\ColumnFormatTest.cs" />
    <Compile Include="Models\Classes\Format\Region\Regions\DataRowsFormatTest.cs" />
    <Compile Include="Models\Classes\Format\Region\Regions\HeaderRowsFormatTest.cs" />
    <Compile Include="Models\Classes\Format\Region\Regions\RowFormatTest.cs" />
    <Compile Include="Models\Classes\Format\Region\Regions\TableFormatTest.cs" />
    <Compile Include="Models\Classes\Format\Report\ReportFormatTest.cs" />
    <Compile Include="Models\Classes\Format\Report\SectionFormatTest.cs" />
    <Compile Include="Models\Classes\HoverOver\HoverOverBaseTest.cs" />
    <Compile Include="Models\Classes\HoverOver\HtmlHoverOverTest.cs" />
    <Compile Include="Models\Classes\HoverOver\StringHoverOverTest.cs" />
    <Compile Include="Models\Classes\Link\LinkBaseTest.cs" />
    <Compile Include="Models\Classes\Link\LinkedResourceBaseTest.cs" />
    <Compile Include="Models\Classes\Link\Resource\BytesPayloadLinkedResourceTest.cs" />
    <Compile Include="Models\Classes\Link\Resource\StringPayloadLinkedResourceTest.cs" />
    <Compile Include="Models\Classes\Link\Resource\UrlLinkedResourceTest.cs" />
    <Compile Include="Models\Classes\Link\SimpleLinkTest.cs" />
    <Compile Include="Models\Classes\Report\ReportTest.cs" />
    <Compile Include="Models\Classes\Report\SectionTest.cs" />
    <Compile Include="Models\Classes\Row\DataRowsTest.cs" />
    <Compile Include="Models\Classes\Row\FlatRowTest.cs" />
    <Compile Include="Models\Classes\Row\HeaderRowsTest.cs" />
    <Compile Include="Models\Classes\Row\RowBaseTest.cs" />
    <Compile Include="Models\Classes\Row\RowTest.cs" />
    <Compile Include="Models\Classes\Row\TableRowsTest.cs" />
    <Compile Include="Models\Classes\Report\TreeTableTest.cs" />
    <Compile Include="Operations\GetConstOp{TValue}Test.designer.cs">
      <DependentUpon>GetConstOp{TValue}Test.cs</DependentUpon>
    </Compile>
    <Compile Include="Operations\MultiStatementOpBase{TStatement,TResult}Test.cs" />
    <Compile Include="Operations\Bool\NotOpTest.cs" />
    <Compile Include="Models\Classes\Cell\Null\NullCellBaseTest.cs" />
    <Compile Include="Models\Classes\Cell\Null\NullCellTest.cs" />
    <Compile Include="Models\Classes\Cell\Output\Operation\OperationCell{TValue}Test.cs" />
    <Compile Include="Models\Classes\Cell\Output\Operation\OperationOutputCellBase{TValue}Test.cs" />
    <Compile Include="Operations\Bool\OrElseOpTest.cs" />
    <Compile Include="Models\Classes\Cell\Output\OutputCellBase{TValue}Test.cs" />
    <Compile Include="Operations\MultiStatementOpBase{TStatement,TResult}Test.designer.cs">
      <DependentUpon>MultiStatementOpBase{TStatement,TResult}Test.cs</DependentUpon>
    </Compile>
    <Compile Include="Operations\SingleStatementOpBase{TStatement,TResult}Test.designer.cs">
      <DependentUpon>SingleStatementOpBase{TStatement,TResult}Test.cs</DependentUpon>
    </Compile>
    <Compile Include="Models\Classes\Format\CellValue\Concrete\PercentCellValueFormatTest.cs" />
    <Compile Include="Models\Classes\Format\CellValue\Concrete\PercentCellValueFormatTest.designer.cs">
      <DependentUpon>PercentCellValueFormatTest.cs</DependentUpon>
    </Compile>
    <Compile Include="Properties\AssemblyInfo.cs" />
    <Compile Include="Properties\GlobalSuppressions.cs" />
    <Compile Include="DataStructureDummyFactory.cs" />
    <Compile Include="DataStructureDummyFactoryTest.cs" />
    <Compile Include="Operations\SingleStatementOpBase{TStatement,TResult}Test.cs" />
    <Compile Include="Models\Classes\Cell\Slotted\SlottedCellTest.cs" />
    <Compile Include="Operations\Decimal\SumOpTest.cs" />
    <AdditionalFiles Include=".analyzers\stylecop.json" />
    <None Include=".analyzers\test.ruleset" />
    <None Include="DummyFactory.recipe-nuspec" />
    <Compile Include="Models\Classes\CellLocator\ReportCellLocatorTest.cs" />
    <Compile Include="Models\Classes\CellLocator\ReportCellLocatorTest.designer.cs">
      <DependentUpon>ReportCellLocatorTest.cs</DependentUpon>
    </Compile>
    <Compile Include="Models\Classes\CellLocator\SectionCellLocatorTest.cs" />
    <Compile Include="Models\Classes\CellLocator\SectionCellLocatorTest.designer.cs">
      <DependentUpon>SectionCellLocatorTest.cs</DependentUpon>
    </Compile>
    <Compile Include="Properties\ProjectInfo.cs" />
    <Compile Include="SerializationConfigurationTypes.cs" />
    <None Include="packages.config" />
  </ItemGroup>
  <ItemGroup>
    <Analyzer Include="..\packages\StyleCop.Analyzers.1.1.118\analyzers\dotnet\cs\StyleCop.Analyzers.CodeFixes.dll" />
    <Analyzer Include="..\packages\StyleCop.Analyzers.1.1.118\analyzers\dotnet\cs\StyleCop.Analyzers.dll" />
    <Analyzer Include="..\packages\xunit.analyzers.0.10.0\analyzers\dotnet\cs\xunit.analyzers.dll" />
  </ItemGroup>
  <ItemGroup>
    <None Include="nuget-icon.png" />
  </ItemGroup>
  <ItemGroup>
    <ProjectReference Include="..\OBeautifulCode.DataStructure.Serialization.Bson\OBeautifulCode.DataStructure.Serialization.Bson.csproj">
      <Project>{099365F5-B064-4809-896D-92E8A55DCE8A}</Project>
      <Name>OBeautifulCode.DataStructure.Serialization.Bson</Name>
    </ProjectReference>
    <ProjectReference Include="..\OBeautifulCode.DataStructure.Serialization.Json\OBeautifulCode.DataStructure.Serialization.Json.csproj">
      <Project>{A64A0A68-18D4-436B-AEE2-562050EC6CFA}</Project>
      <Name>OBeautifulCode.DataStructure.Serialization.Json</Name>
    </ProjectReference>
    <ProjectReference Include="..\OBeautifulCode.DataStructure\OBeautifulCode.DataStructure.csproj">
      <Project>{690b6894-4d9a-4bb3-aa5d-d9ac800eb7e9}</Project>
      <Name>OBeautifulCode.DataStructure</Name>
    </ProjectReference>
  </ItemGroup>
  <ItemGroup>
    <Content Include=".analyzers\dictionary.xml" />
  </ItemGroup>
  <Import Project="$(MSBuildToolsPath)\Microsoft.CSharp.targets" />
  <Target Name="EnsureNuGetPackageBuildImports" BeforeTargets="PrepareForBuild">
    <PropertyGroup>
      <ErrorText>This project references NuGet package(s) that are missing on this computer. Use NuGet Package Restore to download them.  For more information, see http://go.microsoft.com/fwlink/?LinkID=322105. The missing file is {0}.</ErrorText>
    </PropertyGroup>
    <Error Condition="!Exists('..\packages\xunit.core.2.4.1\build\xunit.core.props')" Text="$([System.String]::Format('$(ErrorText)', '..\packages\xunit.core.2.4.1\build\xunit.core.props'))" />
    <Error Condition="!Exists('..\packages\xunit.core.2.4.1\build\xunit.core.targets')" Text="$([System.String]::Format('$(ErrorText)', '..\packages\xunit.core.2.4.1\build\xunit.core.targets'))" />
    <Error Condition="!Exists('..\packages\OBeautifulCode.Build.Analyzers.1.1.139\build\OBeautifulCode.Build.Analyzers.targets')" Text="$([System.String]::Format('$(ErrorText)', '..\packages\OBeautifulCode.Build.Analyzers.1.1.139\build\OBeautifulCode.Build.Analyzers.targets'))" />
  </Target>
  <Import Project="..\packages\xunit.core.2.4.1\build\xunit.core.targets" Condition="Exists('..\packages\xunit.core.2.4.1\build\xunit.core.targets')" />
  <Import Project="..\packages\OBeautifulCode.Build.Analyzers.1.1.139\build\OBeautifulCode.Build.Analyzers.targets" Condition="Exists('..\packages\OBeautifulCode.Build.Analyzers.1.1.139\build\OBeautifulCode.Build.Analyzers.targets')" />
</Project>